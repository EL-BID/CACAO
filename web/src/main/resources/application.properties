# This application name
spring.application.name=CACAO

# Active profile
spring.profiles.active=default

# Port number for use with embedded Tomcat (ignored if this application is deployed as WAR file)
server.port=8888

support.email=gustavohbf@gmail.com

# Hostname of ElasticSearch Service
es.host=127.0.0.1

# Port number of ElasticSearch Service
es.port=9200

# Hostname of Kibana Service
kibana.host=127.0.0.1

# Port number of Kibana Service
kibana.port=5601

# Endpoint of Kibana Service (external address redirected from local proxy)
kibana.endpoint=/kibana

# Local link for Kibana Service (either the location of local proxy or some other external URL)
kibana.menu.link=/kibana

# Hostname of ETL microservice
etl.host=etl

# Port number of ETL microservice
etl.port=8082

# Hostname of Validator microservice
validator.host=validator

# Port number of Validator microservice
validator.port=8081

# Default page size for all pages
default.page.size=5

# Spring cloud stream kafka topics properties
spring.cloud.stream.bindings.receiveProcessedFile-in-0.destination=processed-files
spring.cloud.stream.bindings.receiveProcessedFile-in-0.group=publish
spring.cloud.stream.bindings.fileUploaded-out-0.destination=uploaded-files
spring.cloud.stream.bindings.fileUploaded-out-0.group=validate

spring.cloud.function.definition=receiveProcessedFile


# Location of KAFKA Brokers (may be overridden in production environment, see 'KAFKA_BROKERS' at Dockerfile and setup.sh)
spring.cloud.stream.kafka.binder.brokers=localhost:9092

# Set this to TRUE in order to use an embedded KAFKA (should only be used at development environment)
#use.kafka.embedded=false

# Configuration for running this application behind a reverse proxy
server.forward-headers-strategy=native
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto

# Configuration for making use of SSL over HTTP 
# Unless the application is sitting behind a reverse proxy terminating SSL connections (e.g. NGINX),
# you should configure these parameters for securing the web application
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=file:${user.home}/.cacao/cert.p12
#server.ssl.key-store-password=123456
#server.ssl.key-alias=cacao
#server.ssl.enabled=true

# Configuration for making use of SSL for many purposes (e.g. encrypting SMTP password, encrypting API tokens, etc.)
#mail.ssl.key-store=file:${user.home}/.cacao/cert.p12
#mail.ssl.key-store-password=123456
#mail.ssl.enabled=true

# Set to 'false' if you want to make it possible to update Thymeleaf templates on the fly in development environment
spring.thymeleaf.cache=true

# Set to positive number of minutes if you want SPRING to reload periodically the information stored at message properties
# Set to 0 to keep unchanged (i.e. the application loads message properties only once)
auto.reload.properties=0

spring.servlet.multipart.max-file-size=1GB

spring.servlet.multipart.max-request-size=1GB

# Enable response compression
server.compression.enabled=true

# Coma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Compress the response only if the response size is at least 1 KB
server.compression.min-response-size=1024

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# Minimum number of documents stored for auto creation of corresponding index pattern at Kibana space. Set to zero if
# you want to disable this auto-creation feature
docs.min.auto.index.pattern=1

# maximum amount of time the server will wait for the client to make their request after connecting before the connection is closed
server.connection-timeout=300000

# First master user when database is empty
first.master.user.login=admin@admin
first.master.user.password=123456
first.master.user.name=Administrator

# Default system language
cacao.user.language=en

# Default system country
cacao.user.country=US

# auto.create.users=true for creating new users automatically based on e-mail and fullname provided by OIDC providers
auto.create.users=true

# enable periodic resource monitor metrics collector
#resource.monitor=true

# documents storage
storage.incoming.files.original.dir=/var/cacao/incoming_files/original

# tells if the application should overwrite any existing built-in domain table at startup
built-in.domain.tables.overwrite=false

# Enable at startup checking and fixing all ElasticSearch indices mappings that are not compatible with current model objects
compatibilize.indices.at.start=true

# Enable/disable the SYNC publisher service. It's disabled by default. If you enable it, other CACAO servers
# will be able to request updates from this server. Almost all information will be available through RESTful
# '/api/sync' endpoint, as long as the requesting user has SYSADMIN profile. 
#sync.publisher.enabled=true

# If SYNC publisher service is enabled, you may impose an additional filter over IP addresses that are permitted
# to invoke the RESTful SYNC API. Any other IP address will be rejected, despite of token API validity.
# This filter is applied in addition to the other rules (e.g. the request must also provide a valid API token)
# You may optionally use wildcards ('*') for matching range of IP addresses.
# You may optionally separate different filters using pipe ('|')
# In case you don't want to use this filter, either inform a simple wildcard character ('*') or keep it empty.
#sync.publisher.filter.host=*

# Set this flag to true if you want to display plenty of messages at LOG file in SYNC operations, when debugging it
#sync.full.debug=false

# Uncomment and set this line to a valid user account (e-mail) at CACAO
# for giving him full access to Kibana. Should only be used for initial
# configuration if the RBAC and SSL were activated at Elastic Stack 
#kibana.superuser=

# Profile / Privilege Mappings
# For each privilege identified by its name (SystemPrivilege enum constant), there should be a list of corresponding user profiles identified by their names (UserProfile enum constant).
privilege.ADMIN_OPS=SYSADMIN
privilege.COMMUNICATION_READ=SYSADMIN,SUPPORT,MASTER
privilege.COMMUNICATION_UPLOAD=SYSADMIN,SUPPORT
privilege.COMMUNICATION_WRITE=SYSADMIN,SUPPORT,MASTER
privilege.COMMUNICATION_WRITE_PRIVATE=SYSADMIN,SUPPORT,MASTER
privilege.CONFIG_API_TOKEN=SYSADMIN,SUPPORT
privilege.CONFIG_SYSTEM_MAIL=SYSADMIN
privilege.INTERPERSONAL_READ_ALL=SYSADMIN,SUPPORT,MASTER,AUTHORITY
privilege.INTERPERSONAL_WRITE=SYSADMIN,SUPPORT
privilege.SYNC_OPS=SYSADMIN
privilege.TAX_DECLARATION_READ=SYSADMIN,SUPPORT,AUTHORITY,MASTER,DECLARANT
privilege.TAX_DECLARATION_READ_ALL=SYSADMIN,SUPPORT,MASTER,AUTHORITY
privilege.TAX_DECLARATION_WRITE=SYSADMIN,DECLARANT
privilege.TAX_DECLARATION_WRITE_EMPTY=SYSADMIN,SUPPORT,MASTER
privilege.TAX_TEMPLATE_WRITE=SYSADMIN,SUPPORT
privilege.TAX_DOMAIN_TABLE_WRITE=SYSADMIN,SUPPORT
privilege.TAXPAYER_READ=SYSADMIN,SUPPORT,AUTHORITY,MASTER,DECLARANT
privilege.TAXPAYER_WRITE=SYSADMIN,SUPPORT
privilege.USER_RECENT_READ=SYSADMIN
privilege.USER_HISTORY_READ=SYSADMIN,SUPPORT
privilege.USER_READ=SYSADMIN,SUPPORT
privilege.USER_WRITE=SYSADMIN,SUPPORT
